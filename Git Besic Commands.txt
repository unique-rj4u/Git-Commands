git config --global user.email "unique.rj4u@gmail.com"
git config --global user.name "Dhiraj Sahani"
git config --list
git config 
ls      {show file list}

(Activate ssh key ):
ssh-keygen -t rsa -b 4096 -c "unique.rj4u@gmail.com"
eval $(ssh-agent -s)
ssh-add ~/.ssh/id_rsa
tail ~/.ssh/id_rsa.pub
baad me jo aaye pure ko copy karake github ke ssh key me past karde
  >finally added ssh key

(Basic):
cd Drive_name:
mkdir name     				        {make the directory(file)}
cd name         			            {enter into that file}
git init
git add file_name.extension or git add .    or git add --a 
git diff             			        {check updates(difference)}
git diff  --staged                
git status                    		{check status}
git commit -a(name) -m 'massage'
git commit =m "massage"
git remote add repositories_name url
git push repositories_name Branch_name
git clone url
git pull origin master
ls =for all file 
finally uploaded on github

(file me kuch change(update) kiya usake baad):
git add .
git commit -m "massage"
git push  -u origin master
>finally pushed file on github

(Branch):
git branch      {show all branch}
git branch -v   {show all branch with commits}
git checkout -b give_branch_name            {direct create & checkout on that branch}
git branch Branch_name          {only create branch}
git checkout branch_name        {switch in a branch}

>aur baad me push karane ke liye same process

(merging branches):
git mrerge branch_name
merging     {but vsc me simple he}
>i Button >Type Commit>esc>:wq
git add .
and finally git merge branch_name
so finally merged branches

(Delete branches):
 git branch -d branch_name      {Delete local branch}
 git push -d origin branch_name     {Delete Remote Branch}


(remote):
git remote          {show only push github url}
git remote -v       {show ]pull and push github url}



rm -rf .git                             {Delete The .git folder}
pwd   {present working directory}
git ignore file_name    {ignore file}
touch file_name    {create file by command }


q   {Out From Operation}

git mv file_name file_name       {Move file one place to another place}

(Git Log):
git log
git log -p   
git log --stat      {Short Details(summary)}
git log --pretty=oneline    {In One line}
git log --pretty=Short
git log --pretty=long
git log --since=2.days
git log --since=2.weeks
git log --since=2.years
git log --pretty=format:"%h --%an"      {show commit by filter} {given in git documentation website}
git commit --amend   >i Button >Type Commit>esc>:wq           {transfer commit into another commit}

git restore --staged file_name.extension        {unstaged the file}
git checkout --file_name        {restore previous commit}  
git add .gitignore
git checkout -f                 {enter previous commit}

(alias):        {give any short name instead of any command}
git config --global alias.give_any_shrot_name jisake_badale_dena_ho
(eg. git config --global alias.st status)                   {we can use st instead of status}













